sap.ui.define([
	"sap/ui/test/Opa5",
	"sap/ui/test/actions/Press",
	"./Common",
	"sap/ui/test/matchers/AggregationLengthEquals",
	"sap/ui/test/matchers/AggregationFilled",
	"sap/ui/test/matchers/PropertyStrictEquals"
], function(Opa5, Press, Common, AggregationLengthEquals, AggregationFilled, PropertyStrictEquals) {
	"use strict";

	var sViewName = "Detail";

	Opa5.createPageObjects({
		onTheDetailPage : {

			baseClass : Common,

			actions : {

			{{#if 2listdetail.parameters.FLP.value.value}}

				iPressOnTheShareButton : function () {
					return this.waitFor({
						controlType: "sap.m.Button",
						viewName : sViewName,
						matchers : new PropertyStrictEquals({
							name : "icon",
							value : "sap-icon://action"
						}),
						actions : new Press(),
						errorMessage : "Did not find the share button on detail page"
					});
				},
				iPressOnTheSaveAsTileButton : function () {
					return this.waitFor({
						controlType : "sap.ushell.ui.footerbar.AddBookmarkButton",
						searchOpenDialogs : true,
						viewName : sViewName,
						actions : new Press(),
						errorMessage : "Did not find the save as tile button on detail page"
					});
				}{{/if}}
			},

			assertions : {

				iShouldSeeTheRememberedObject : function () {
					return this.waitFor({
						success : function () {
							var sBindingPath = this.getContext().currentItem.bindingPath;
							this._waitForPageBindingPath(sBindingPath);
						}
					});
				},

				_waitForPageBindingPath : function (sBindingPath) {
					return this.waitFor({
						id : "detailPage",
						viewName : sViewName,
						matchers : function (oPage) {
							return oPage.getBindingContext() && oPage.getBindingContext().getPath() === sBindingPath;
						},
						success : function (oPage) {
							Opa5.assert.strictEqual(oPage.getBindingContext().getPath(), sBindingPath, "was on the remembered detail page");
						},
						errorMessage : "Remembered object " + sBindingPath + " is not shown"
					});
				},

				iShouldSeeTheObjectLineItemsList : function () {
					return this.waitFor({
						id : "lineItemsList",
						viewName : sViewName,
						success : function (oList) {
							Opa5.assert.ok(oList, "Found the line items list.");
						}
					});
				},

			{{#if 2listdetail.parameters.Object_Number.value.name}}

				iShouldSeeHeaderActionButtons: function () {
					return this.waitFor({
						id : ["closeColumn", "enterFullScreen"],
						viewName : sViewName,
						success : function () {
							Opa5.assert.ok(true, "The action buttons are visible");
						},
						errorMessage : "The action buttons were not found"
					});
				}{{/if}}{{#if 2listdetail.parameters.FLP.value.value}},
				theShareTileButtonShouldContainTheRememberedObjectName : function () {
					return this.waitFor({
						controlType : "sap.ushell.ui.footerbar.AddBookmarkButton",
						searchOpenDialogs : true,
						viewName : sViewName,
						matchers : function (oButton) {
							var sObjectName = this.getContext().currentItem.title;
							var sTitle = oButton.getTitle();
							return sTitle && sTitle.indexOf(sObjectName) > -1;
						}.bind(this),
						success : function () {
							Opa5.assert.ok(true, "The Save as Tile button contains the oject name");
						},
						errorMessage : "The Save as Tile did not contain the object name"
					});
				},
				iShouldSeeTheShareActionButtons : function () {
					return this.waitFor({
						id : ["shareEmail", "shareTile"],
						viewName : sViewName,
						success : function () {
							Opa5.assert.ok(true, "The share action buttons are visible");
						},
						errorMessage : "One or more of the share action buttons is not visible"
					});
				}{{/if}}

			}

		}

	});

});
