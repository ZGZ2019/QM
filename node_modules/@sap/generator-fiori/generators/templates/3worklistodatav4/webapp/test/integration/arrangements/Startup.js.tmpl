sap.ui.define([
	"sap/ui/test/Opa5"{{#if 3worklistodatav4.parameters.FLP.value.value}},
	"sap/ui/core/routing/HashChanger",
	"{{formatNamespace 3worklistodatav4.parameters.AppId.value}}/test/flpSandbox",
	"sap/ui/fl/FakeLrepConnectorLocalStorage"{{/if}}
], function(Opa5{{#if 3worklistodatav4.parameters.FLP.value.value}}, HashChanger, flpSandbox, FakeLrepConnectorLocalStorage{{/if}}) {
"use strict";

return Opa5.extend("{{3worklistodatav4.parameters.AppId.value}}.test.integration.arrangements.Startup", {

		/**
		  * Initializes mock server{{#if 3worklistodatav4.parameters.FLP.value.value}} and flp sandbox{{/if}}, then {{#if 3worklistodatav4.parameters.FLP.value.value}}sets the hash intent to simulate pressing on the app tile{{else}}starts the app component{{/if}}
		  * @param {object} oOptionsParameter An object that contains the configuration for starting up the app
		  * @param {integer} oOptionsParameter.delay A custom delay to start the app with{{#if 3worklistodatav4.parameters.FLP.value.value}}
		  * @param {string} oOptionsParameter.intent The intent to start the FLP sandbox with initially, may also contain an in-app hash as a shortcut{{/if}}
		  * @param {string} [oOptionsParameter.hash] The in-app hash can also be passed separately for better readability in tests
		  * @param {boolean} [oOptionsParameter.autoWait=true] Automatically wait for pending requests while the application is starting up
		*/
{{#if 3worklistodatav4.parameters.FLP.value.value}}
		iStartMyFLPApp: function (oOptionsParameter) {
{{else}}
		iStartMyApp : function (oOptionsParameter) {
{{/if}}
			var oOptions = oOptionsParameter || {};

			// start the app with a minimal delay to make tests fast but still async to discover basic timing issues
			oOptions.delay = oOptions.delay || 1;
{{#if 3worklistodatav4.parameters.FLP.value.value}}

			var aInitializations = [];
			aInitializations.push(flpSandbox.init());
{{/if}}

{{#if 3worklistodatav4.parameters.FLP.value.value}}
			// Wait for all initialization promises of mock server and sandbox to be fulfilled.
			// After that enable the fake LRepConnector
			this.iWaitForPromise(Promise.all(aInitializations));
			FakeLrepConnectorLocalStorage.enableFakeConnector();

			this.waitFor({
				autoWait: (oOptions ? oOptions.autoWait : true),
				success: function () {
					new HashChanger().setHash(oOptions.intent + (oOptions.hash ? "&/" + oOptions.hash : ""));
				}
			});
{{else}}
			// start the app UI component
			this.iStartMyUIComponent({
				componentConfig: {
					name: "{{3worklistodatav4.parameters.AppId.value}}",
					async: true
				},
				hash: oOptions.hash,
				autoWait: oOptions.autoWait
			});
{{/if}}
		}
	});
});
